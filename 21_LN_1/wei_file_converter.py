from iodata import save_data_set
import numpy as np
import os

# input type:
#   pinfo : string: this is written in info.txt
#   input_data_set_name : string: this is the prefix of the input data set name
#   output_data_set name : string: this is the prefix of the out data set name
#   pinfo_data : dict:
#       key = parameter name,
#       value = string file_suffix
#       pinfo will be read by line
#   wei_data_folder_path : string: path of the input data folder
#   data_folder_path : string: path of the output folder
def wei_to_data(
        input_data_set_name,
        output_data_set_name,
        pinfo,
        pinfo_data,
        num_potentials=float('inf'),
        random_batch_size=0,
        wei_data_folder_path="wei_data",
        data_folder_path="data"):

    wei_data_folder_path = os.path.join(wei_data_folder_path, input_data_set_name)
    categories = ["VV", "UU", "EE", "COUNT",]

    data = [np.loadtxt(os.path.join(wei_data_folder_path, cat + "_" + input_data_set_name + '.txt'), delimiter=',') for cat in categories]

    pinfo_dict = dict()
    for param_name, prefix in pinfo_data.items():
        pinfo_dict[param_name] = np.loadtxt(os.path.join(wei_data_folder_path, prefix + "_" + input_data_set_name + '.txt'))

    pinfo += '\n'
    for i in range(min(data[0].shape[0], num_potentials)):
        cur_info = pinfo
        V = data[0][i]
        Vbar = np.max(V)
        W = np.minimum(np.maximum(0, 1/data[1][i]), Vbar)
        p = np.concatenate([V[:,np.newaxis], W[:,np.newaxis]], axis=1)
        E = np.concatenate([data[2][i][:,np.newaxis], data[3][i][:,np.newaxis]], axis=1)

        if random_batch_size > 0:
            index = np.random.choice(E.shape[0], random_batch_size, replace=False)
            E = E[index,:]

        for k in pinfo_dict:
            cur_info += str(k) + ":" + str(pinfo_dict[k][i]) + '\n'

        save_data_set(cur_info, p, E, data_folder_path, output_data_set_name)

def wei_to_data_main(
    input_data_set_prefixes,
    output_data_set_name,
    pinfo,
    pinfo_data_list,
    num_potentials=float('inf'),
    random_batch_size=20,
    wei_data_folder_path="wei_data",
    data_folder_path="data"
    ):

    for i, input_data_set_prefix in enumerate(input_data_set_prefixes):
        wei_to_data(
            input_data_set_prefix,
            output_data_set_name,
            pinfo,
            pinfo_data_list[i],
            num_potentials=num_potentials,
            random_batch_size=random_batch_size,
            wei_data_folder_path=wei_data_folder_path,
            data_folder_path=data_folder_path,
        )


#########################################
# File prefix list
# B
# E
# GS - standard Gaussian, ignored
# GS2
# P - standard Poisson, ignored
# P1
# U
#########################################
# input_data_set_prefixes = ['B', 'E', 'GS2', 'P1', 'U']
# output_data_set_name = 'discrete_10000'
# pinfo = "potential type:Uniform\nGenerated by:matlab/LDL/randomly sampling E's to compute N_E(V)"
# pinfo_data_list = [
#     {'probability of vmax' : 'PRO', 'vmax': 'VMAX'},
#     {'exp lambda' : 'EL'},
#     {'standard deviation': 'STD'},
#     {'poisson lambda' : 'PL'},
#     {'vmax' : 'VMAX'}
# ]
# random_batch_size=20
# data_folder_path = os.path.join("data", output_data_set_name, "train")
# wei_to_data_main(
#     input_data_set_prefixes,
#     output_data_set_name,
#     pinfo,
#     pinfo_data_list,
#     random_batch_size=random_batch_size,
#     data_folder_path=data_folder_path
# )


# input_data_set_prefixes = ['B', 'E', 'GS2', 'P1', 'U']
# output_data_set_name = 'discrete_10000'
# pinfo = "potential type:Uniform\nGenerated by:matlab/LDL/randomly sampling E's to compute N_E(V)"
# pinfo_data_list = [
#     {'probability of vmax' : 'PRO', 'vmax': 'VMAX'},
#     {'exp lambda' : 'EL'},
#     {'standard deviation': 'STD'},
#     {'poisson lambda' : 'PL'},
#     {'vmax' : 'VMAX'}
# ]
# random_batch_size=20
# data_folder_path = os.path.join("data", output_data_set_name, "validation")
# wei_to_data_main(
#     input_data_set_prefixes,
#     output_data_set_name,
#     pinfo,
#     pinfo_data_list,
#     num_potentials=10,
#     random_batch_size=random_batch_size,
#     data_folder_path=data_folder_path
# )
